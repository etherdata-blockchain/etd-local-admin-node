name: Build Docker Image and test

on:
  push:
    branches:
      - "main"
    tags:
      - "**"
  pull_request:
    branches:
      - "main"
      - "dev"

jobs:
  dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2
        with:
          version: 6.32.9
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: 'pnpm'
      - uses: google/wireit@setup-github-actions-caching/v1
      - run: pnpm install
      - name: Run linters
        uses: wearerequired/lint-action@v1
        with:
          eslint: true
          prettier: true

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2
        with:
          version: 6.32.9
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: 'pnpm'
      - uses: google/wireit@setup-github-actions-caching/v1
      - run: pnpm install
      - run: pnpm lint
      - run: pnpm test
      - run: pnpm build
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  deploy:
    needs:
      - test
      - dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - uses: google/wireit@setup-github-actions-caching/v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64,linux/amd64
          push: false
          tags: |
            registry.etdchain.net/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:latest
            sirily11/etd-admin-node:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.18.0
        with:
          channel-id: ${{ secrets.SLARK_CHANNEL_ID }}
          slack-message: "GitHub ${{ github.repository }} build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  release:
    runs-on: ubuntu-latest
    if: ${{ (github.event.pusher.name != 'github action') && (github.ref == 'refs/heads/main') }}
    needs: [ deploy ]
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: 'pnpm'
      - uses: pnpm/action-setup@v2
        with:
          version: 6.32.9
      - uses: google/wireit@setup-github-actions-caching/v1
      - run: pnpm install
        name: Installing dependencies
      - name: Setup git identity
        run: |
          git config --global user.email "github-action.github.com"
          git config --global user.name "github action"
      - name: Release
        run: pnpm release --ci
        env:
          GITHUB_TOKEN: ${{secrets.RELEASE_TOKEN}}
