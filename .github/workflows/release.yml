on:
  release:
    types:
      - released

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Prepare
        id: prep
        run: |
          VERSION=${{ github.event.release.tag_name }}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to ETD registry
        uses: docker/login-action@v1
        with:
          registry: registry.etdchain.net
          username: ${{ secrets.ETD_REGISTRY_USER }}
          password: ${{ secrets.ETD_REGISTRY_PASSWORD }}
      - uses: google/wireit@setup-github-actions-caching/v1
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64,linux/amd64
          push: true
          tags: |
            sirily11/etd-admin-node:${{ steps.prep.outputs.version }}
            ghcr.io/${{ github.repository }}:${{ steps.prep.outputs.version }}
            registry.etdchain.net/${{ github.repository }}:${{ steps.prep.outputs.version }}
            registry.etdchain.net/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:latest
            sirily11/etd-admin-node:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.18.0
        with:
          channel-id: ${{ secrets.SLARK_CHANNEL_ID }}
          slack-message: "A New Version Released <${{ github.repository }}>! ${{ github.event.release.tag_name }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
